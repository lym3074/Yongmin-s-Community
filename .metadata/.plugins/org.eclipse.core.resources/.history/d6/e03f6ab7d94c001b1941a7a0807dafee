package kr.co.controller;


import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import kr.co.service.BoardService;
import kr.co.service.MemberService;
import kr.co.vo.BoardVO;
import kr.co.vo.Criteria;
import kr.co.vo.MemberVO;
import kr.co.vo.PageMaker;
import kr.co.vo.SearchCriteria;


@Controller
@RequestMapping("/member/*")
public class MemberController {

	private static final Logger logger = LoggerFactory.getLogger(MemberController.class);
	
	@Inject
	MemberService service;
	
	@RequestMapping(value="/home", method = RequestMethod.GET)
	public String getHomePage() {
		return "member/home";
	}
	
	@RequestMapping(value="/login", method=RequestMethod.POST)
	public String login(MemberVO vo,HttpSession session, RedirectAttributes reAtt) throws Exception {
		MemberVO login = service.login(vo, session);
		if(login==null) {
			reAtt.addFlashAttribute("msg",false);
			return "redirect:/member/home";
		} else {
			System.out.println(login);
			return "redirect:/board/list";
		}
	}

	@RequestMapping(value="/logout", method=RequestMethod.GET)
	public String logout(HttpSession session) throws Exception {
		session.invalidate(); 
		System.out.println("session deleted");
		return "redirect:/member/home"; 
	}
	
	@RequestMapping(value="/join", method = RequestMethod.GET)
	public void getJoinPage() throws Exception {
		logger.info("joinPage");
	}
	
	@RequestMapping(value="/join", method = RequestMethod.POST)
	public String join(MemberVO vo) throws Exception {
		logger.info("join");
		service.join(vo);
		return "redirect:/member/home";
	}
	
	@RequestMapping(value="/myPage", method = RequestMethod.GET)
	public String myPage() throws Exception {
		return "member/myPage";
	}
	
	/*
	 * // 게시판 수정 View
	 * 
	 * @RequestMapping(value="/updateView", method=RequestMethod.GET) public String
	 * updateView(BoardVO boardVO, Model model) throws Exception {
	 * logger.info("updateView"); model.addAttribute("update",
	 * service.read(boardVO.getBno())); return "board/updateView"; }
	 * 
	 * // 게시판 수정
	 * 
	 * @RequestMapping(value="/update", method=RequestMethod.POST) public String
	 * update(BoardVO boardVO) throws Exception { logger.info("update");
	 * service.update(boardVO); return "redirect:/board/list"; }
	 * 
	 * // 게시판 삭제
	 * 
	 * @RequestMapping(value="/delete", method=RequestMethod.POST) public String
	 * deledt(BoardVO boardVO) throws Exception { logger.info("delete");
	 * service.delete(boardVO.getBno()); return "redirect:/board/list"; }
	 */
	
}
