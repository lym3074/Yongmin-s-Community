package kr.co.controller;


import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import kr.co.service.BoardService;
import kr.co.service.MemberService;
import kr.co.vo.Criteria;
import kr.co.vo.MemberVO;
import kr.co.vo.PageMaker;
import kr.co.vo.SearchCriteria;


@Controller
@RequestMapping("/member/*")
public class MemberController {

	private static final Logger logger = LoggerFactory.getLogger(MemberController.class);
	
	@Autowired
	MemberService service;
	
	@Autowired
	BoardService boardService;
	
	@RequestMapping(value="/home", method = RequestMethod.GET)
	public String getHomePage() {
		return "member/home";
	}
	
	@RequestMapping(value="/login", method=RequestMethod.POST)
	public String login(MemberVO vo,HttpSession session, RedirectAttributes reAtt) throws Exception {
		MemberVO login = service.login(vo, session);
		if(login==null) {
			reAtt.addFlashAttribute("msg",false);
			return "redirect:/member/home";
		} else {
			return "redirect:/board/list";
		}
	}

	@RequestMapping(value="/logout", method=RequestMethod.GET)
	public String logout(HttpSession session) throws Exception {
		session.invalidate();
		return "redirect:/member/home"; 
	}
	
	@RequestMapping(value="/join", method = RequestMethod.GET)
	public void getJoinPage() throws Exception {
		logger.info("joinPage");
	}
	
	@RequestMapping(value="/join", method = RequestMethod.POST)
	public String join(MemberVO vo) throws Exception {
		logger.info("join");
		service.join(vo);
		return "redirect:/member/home";
	}
	
	@RequestMapping(value="/myPage", method = RequestMethod.GET)
	public String myPage(Model model, Criteria criteria, HttpSession session) throws Exception {
		
		model.addAttribute("memberPosting",service.memberPosting(criteria, session));
		PageMaker pageMaker = new PageMaker();
		pageMaker.setCriteria(criteria);
		pageMaker.setTotalCount(service.listCount(session));
		
		model.addAttribute("pageMaker",pageMaker);
		return "member/myPage";
	}
	// 어제 맵에 계속 널값 들어간거 해결핼 수 있다.
	
}
